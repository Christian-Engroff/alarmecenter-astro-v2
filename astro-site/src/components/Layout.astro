---
export interface Props {
  title: string;
  description?: string;
  lang?: string;
}

const { title, description = "Sistemas de alarme e segurança eletrônica, venda e instalação de câmeras, alarme, cerca elétrica, controle de acesso, motor e rede logica.", lang = "pt-BR" } = Astro.props;
---

<!DOCTYPE html>
<html lang={lang} class="pt-br">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    
    <!-- Preload critical fonts -->
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;700&display=swap" as="style" />
  </head>
  <body>
    <slot />
    
    <!-- JavaScript for mobile menu and interactions -->
    <script>
      // Mobile menu toggle
      document.addEventListener('DOMContentLoaded', function() {
        const mobileMenuBtn = document.querySelector('.mobile-menu-btn');
        const mobileMenu = document.querySelector('.mobile-menu');
        const mobileMenuClose = document.querySelector('.mobile-menu-close');
        
        if (mobileMenuBtn && mobileMenu) {
          mobileMenuBtn.addEventListener('click', function() {
            mobileMenu.classList.add('active');
          });
        }
        
        if (mobileMenuClose && mobileMenu) {
          mobileMenuClose.addEventListener('click', function() {
            mobileMenu.classList.remove('active');
          });
        }
        
        // Close mobile menu when clicking outside
        document.addEventListener('click', function(e) {
          if (mobileMenu && !mobileMenu.contains(e.target) && !mobileMenuBtn?.contains(e.target)) {
            mobileMenu.classList.remove('active');
          }
        });
        
        // Theme toggle
        const themeToggle = document.querySelector('#theme-toggle');
        if (themeToggle) {
          themeToggle.addEventListener('click', function() {
            document.documentElement.classList.toggle('dark');
            localStorage.setItem('theme', document.documentElement.classList.contains('dark') ? 'dark' : 'light');
          });
        }
        
        // Load saved theme
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme === 'dark') {
          document.documentElement.classList.add('dark');
        }
      });
    </script>
  </body>
</html>